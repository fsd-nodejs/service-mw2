# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    container: node:14.15.3-buster

    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mariadb:10
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: shop 

    strategy:
      matrix:
        node-version: [12.x, 14.x]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Verify MySQL connection from container and init data
      run: |
        apt-get update
        apt-get install -y mariadb-client
        mysql --host mysql -uroot -ppassword -e "SHOW DATABASES"
        mysql --host mysql -uroot -ppassword shop < ./src/database/init.sql
    - run: npm install
    - run: npm run ci
      env:
        CI: true
        # mysql
        MYSQL_HOST: mysql
        MYSQL_PORT: 3306
        MYSQL_USER: root
        MYSQL_PASSWORD: password
        MYSQL_DATABASE: shop
        # redis
        REDIS_HOST: redis
        REDIS_PORT: 6379
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
#       with:
#         token: ${{secrets.CODECOV_TOKEN}}
#         file: ./coverage/coverage-final.json
      
