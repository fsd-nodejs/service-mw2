# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: mysql:5.7
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: shop
      jaeger:
        image: jaegertracing/all-in-one
        ports:
          - 6832:6832/udp
          - 16686:16686
      rabbitmq:
        image: rabbitmq:3.8.18-beta.1
        ports:
        - 5672:5672
        - 15672:15672
    strategy:
      matrix:
        node-version: [14.x]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - uses: gtadam/mysql-deploy-action@v1
      with:
        DATABASE_HOST: mysql
        DATABASE_PORT: 3306
        DATABASE_NAME: shop
        DATABASE_USERNAME: root
        DATABASE_PASSWORD: password
        DATABASE_SCRIPT: ./src/database/init.sql

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: node_modules
        key: ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-${{ matrix.node-version }}-build-
          ${{ runner.os }}-${{ matrix.node-version }}-

    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Run Tests
      # run: npm run ci
      run: npm run cov:mocha
      env:
        CI: true
        # mysql
        MYSQL_HOST: mysql
        MYSQL_PORT: 3306
        MYSQL_USER: root
        MYSQL_PASSWORD: password
        MYSQL_DATABASE: shop
        # redis
        REDIS_HOST: redis
        REDIS_PORT: 6379
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
